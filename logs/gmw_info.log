2019-06-13 14:21:20 [org.hibernate.validator.internal.util.Version:30] - HV000001: Hibernate Validator 5.3.5.Final
2019-06-13 14:21:20 [org.springframework.context.support.AbstractApplicationContext:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2ab40d2d: startup date [Thu Jun 13 14:21:20 CST 2019]; root of context hierarchy
2019-06-13 14:21:21 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 14:21:21 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$53e322bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 14:21:21 [org.springframework.boot.SpringApplication:593] - No active profile set, falling back to default profiles: default
2019-06-13 14:21:21 [org.springframework.context.support.AbstractApplicationContext:583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2ed8882e: startup date [Thu Jun 13 14:21:21 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2ab40d2d
2019-06-13 14:21:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Tomcat; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Tomcat.class]]
2019-06-13 14:21:23 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 14:21:23 [org.springframework.cloud.context.scope.GenericScope:263] - BeanFactory id=dcf35317-8454-3064-b40b-4c6664f4bebf
2019-06-13 14:21:23 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 14:21:23 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$37c91fc2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 14:21:23 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$53e322bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 14:21:24 [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] - Tomcat initialized with port(s): 2101 (http)
2019-06-13 14:21:24 [org.apache.juli.logging.DirectJDKLog:179] - Starting service [Tomcat]
2019-06-13 14:21:24 [org.apache.juli.logging.DirectJDKLog:179] - Starting Servlet Engine: Apache Tomcat/8.5.15
2019-06-13 14:21:24 [org.apache.juli.logging.DirectJDKLog:179] - Initializing Spring embedded WebApplicationContext
2019-06-13 14:21:24 [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] - Root WebApplicationContext: initialization completed in 3183 ms
2019-06-13 14:21:25 [org.springframework.boot.web.servlet.ServletRegistrationBean:190] - Mapping servlet: 'dispatcherServlet' to [/]
2019-06-13 14:21:25 [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 14:21:25 [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 14:21:25 [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 14:21:25 [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] - Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 14:21:28 [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] - Mapped "{[/shop/goods/getGoodsDetailByGoodsName],methods=[POST]}" onto public java.lang.Object com.eurekaproducer.home.controller.GoodsController.getGoodsDetailByGoodsName(java.lang.String) throws java.lang.Exception
2019-06-13 14:21:28 [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] - Mapped "{[/shop/goods/getGoodsDetail],methods=[POST]}" onto public java.lang.Object com.eurekaproducer.home.controller.GoodsController.getGoodsDetail(java.lang.Integer) throws java.lang.Exception
2019-06-13 14:21:28 [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] - Mapped "{[/dc],methods=[GET]}" onto public java.lang.String com.eurekaproducer.home.DcController.dc() throws java.lang.Exception
2019-06-13 14:21:28 [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] - Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 14:21:28 [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] - Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 14:21:28 [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] - Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 14:21:28 [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 14:21:28 [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 14:21:29 [springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping:69] - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 14:21:29 [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2ed8882e: startup date [Thu Jun 13 14:21:21 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2ab40d2d
2019-06-13 14:21:29 [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 14:21:29 [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 14:21:29 [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 14:21:31 [com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 14:21:31 [com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 14:21:31 [org.springframework.jmx.export.MBeanExporter:431] - Registering beans for JMX exposure on startup
2019-06-13 14:21:31 [org.springframework.jmx.export.MBeanExporter:916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 14:21:31 [org.springframework.jmx.export.MBeanExporter:916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 14:21:31 [org.springframework.jmx.export.MBeanExporter:916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 14:21:31 [org.springframework.jmx.export.MBeanExporter:678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 14:21:31 [org.springframework.jmx.export.MBeanExporter:678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 14:21:31 [org.springframework.jmx.export.MBeanExporter:678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2ed8882e,type=ConfigurationPropertiesRebinder]
2019-06-13 14:21:31 [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] - Starting beans in phase 0
2019-06-13 14:21:31 [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] - Setting initial instance status as: STARTING
2019-06-13 14:21:31 [com.netflix.discovery.DiscoveryClient:344] - Initializing Eureka in region us-east-1
2019-06-13 14:21:31 [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] - Using JSON encoding codec LegacyJacksonJson
2019-06-13 14:21:31 [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] - Using JSON decoding codec LegacyJacksonJson
2019-06-13 14:21:31 [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] - Using XML encoding codec XStreamXml
2019-06-13 14:21:31 [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] - Using XML decoding codec XStreamXml
2019-06-13 14:21:32 [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] - Resolving eureka endpoints via configuration
2019-06-13 14:21:32 [com.netflix.discovery.DiscoveryClient:920] - Disable delta property : false
2019-06-13 14:21:32 [com.netflix.discovery.DiscoveryClient:921] - Single vip registry refresh property : null
2019-06-13 14:21:32 [com.netflix.discovery.DiscoveryClient:922] - Force full registry fetch : false
2019-06-13 14:21:32 [com.netflix.discovery.DiscoveryClient:923] - Application is null : false
2019-06-13 14:21:32 [com.netflix.discovery.DiscoveryClient:924] - Registered Applications size is zero : true
2019-06-13 14:21:32 [com.netflix.discovery.DiscoveryClient:926] - Application version is -1: true
2019-06-13 14:21:32 [com.netflix.discovery.DiscoveryClient:1009] - Getting all instance registry info from the eureka server
2019-06-13 14:21:32 [com.netflix.discovery.DiscoveryClient:1018] - The response status is 200
2019-06-13 14:21:32 [com.netflix.discovery.DiscoveryClient:1244] - Starting heartbeat executor: renew interval is: 30
2019-06-13 14:21:32 [com.netflix.discovery.InstanceInfoReplicator:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 14:21:32 [com.netflix.discovery.DiscoveryClient:425] - Discovery Client initialized at timestamp 1560406892575 with initial instances count: 1
2019-06-13 14:21:32 [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] - Registering application unknown with eureka with status UP
2019-06-13 14:21:32 [com.netflix.discovery.DiscoveryClient$3:1279] - Saw local status change event StatusChangeEvent [timestamp=1560406892604, current=UP, previous=STARTING]
2019-06-13 14:21:32 [com.netflix.discovery.DiscoveryClient:795] - DiscoveryClient_UNKNOWN/PC-20181024ZOZM:2101: registering service...
2019-06-13 14:21:32 [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] - Starting beans in phase 2147483647
2019-06-13 14:21:32 [springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper:147] - Context refreshed
2019-06-13 14:21:32 [springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper:150] - Found 1 custom documentation plugin(s)
2019-06-13 14:21:32 [com.netflix.discovery.DiscoveryClient:804] - DiscoveryClient_UNKNOWN/PC-20181024ZOZM:2101 - registration status: 204
2019-06-13 14:21:32 [springfox.documentation.spring.web.scanners.ApiListingReferenceScanner:41] - Scanning for api listing references
2019-06-13 14:21:32 [org.apache.juli.logging.DirectJDKLog:179] - Initializing ProtocolHandler ["http-nio-2101"]
2019-06-13 14:21:32 [org.apache.juli.logging.DirectJDKLog:179] - Starting ProtocolHandler ["http-nio-2101"]
2019-06-13 14:21:33 [org.apache.juli.logging.DirectJDKLog:179] - Using a shared selector for servlet write/read
2019-06-13 14:21:33 [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] - Tomcat started on port(s): 2101 (http)
2019-06-13 14:21:33 [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] - Updating port to 2101
2019-06-13 14:21:33 [org.springframework.boot.StartupInfoLogger:57] - Started EurekaProducerApplication in 14.03 seconds (JVM running for 19.658)
2019-06-13 14:21:37 [org.apache.juli.logging.DirectJDKLog:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 14:21:37 [org.springframework.web.servlet.FrameworkServlet:489] - FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 14:21:37 [org.springframework.web.servlet.FrameworkServlet:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2019-06-13 14:26:32 [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] - Resolving eureka endpoints via configuration
2019-06-13 14:31:32 [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] - Resolving eureka endpoints via configuration
2019-06-13 14:36:32 [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] - Resolving eureka endpoints via configuration
2019-06-13 14:41:32 [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] - Resolving eureka endpoints via configuration
2019-06-13 14:46:32 [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] - Resolving eureka endpoints via configuration
2019-06-13 14:51:32 [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] - Resolving eureka endpoints via configuration
2019-06-13 14:56:32 [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] - Resolving eureka endpoints via configuration
2019-06-13 15:01:32 [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] - Resolving eureka endpoints via configuration
2019-06-13 15:06:32 [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] - Resolving eureka endpoints via configuration
2019-06-13 15:11:32 [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] - Resolving eureka endpoints via configuration
2019-06-13 15:16:32 [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] - Resolving eureka endpoints via configuration
